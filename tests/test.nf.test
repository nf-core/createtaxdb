nextflow_pipeline {

    name "Test pipeline: NFCORE_CREATETAXDB"
    script "main.nf"
    tag "pipeline"
    tag "nfcore_createtaxdb"
    tag "test"

    test("test_profile") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(
                        file("$outputDir/bracken/database/database100mers.kmer_distrib").name,
                        file("$outputDir/bracken/database/database100mers.kraken").name,
                        file("$outputDir/bracken/database/database.kraken").name,
                        path("$outputDir/centrifuge/"),
                        path("$outputDir/diamond/database.dmnd"),
                        path("$outputDir/ganon/database.hibf"),
                        path("$outputDir/ganon/database.tax").readLines().last().contains('SARS-CoV-2_genome'),
                        path("$outputDir/kaiju/database.fmi"),
                        path("$outputDir/kraken2/database/hash.k2d"),
                        file("$outputDir/kraken2/database/opts.k2d").name,
                        path("$outputDir/kraken2/database/taxo.k2d"),
                        file("$outputDir/krakenuniq/database/database.idx").name,
                        file("$outputDir/krakenuniq/database/database.kdb"),
                        file("$outputDir/krakenuniq/database/taxDB"),
                        path("$outputDir/malt/malt-build.log").readLines().last().contains('Peak memory'),
                        path("$outputDir/malt/malt_index/index0.idx"),
                        path("$outputDir/malt/malt_index/ref.db").exists(),
                        path("$outputDir/malt/malt_index/ref.idx").exists(),
                        path("$outputDir/malt/malt_index/ref.inf"),
                        path("$outputDir/malt/malt_index/taxonomy.idx").exists(),
                        path("$outputDir/malt/malt_index/taxonomy.map"),
                        path("$outputDir/malt/malt_index/taxonomy.tre")
                    ).match()
                },
                { assert new File("$outputDir/pipeline_info/nf_core_createtaxdb_software_mqc_versions.yml").exists() },
                { assert new File("$outputDir/multiqc/multiqc_report.html").exists() },
                { assert path("$outputDir/malt/malt_index/table0.db").exists() },
                { assert path("$outputDir/malt/malt_index/table0.idx").exists() },
            )
        }
    }
}
