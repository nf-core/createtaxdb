{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/createtaxdb/master/nextflow_schema.json",
    "title": "nf-core/createtaxdb pipeline parameters",
    "description": "Parallelised and automated creation of metagenomic classifier databases of different tools",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir", "dbname"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the reference genomes you wish to build into a metagenomic profiling database. Use this parameter to specify its location. It has to be a comma-separated file with 4 columns, and a header row. See [usage docs](https://nf-co.re/createtaxdb/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                },
                "dbname": {
                    "type": "string",
                    "description": "Specify name that resulting databases will be prefixed with.",
                    "fa_icon": "fas fa-id-badge"
                },
                "accession2taxid": {
                    "type": "string",
                    "description": "NCBI-style four-column accession to taxonomy ID map file",
                    "help_text": "\nAn NCBI four column file tab-separated file with `accession`, `accession.version`, `taxid` and `gi` number. The first refers to an accession ID in each FASTA entry header. The second refers to the accession ID but with the accession version number appended to the end (e.g. `.1`). The third refers to the taxonomy ID of the organism the sequence belongs to, as listed in `nodes.dmp`. The fourth refers to the old-style NCBI gi number of the sequence.\n\nIf building with typical NCBI data, the most typical file is the `nucl_gb.accession2taxid` file from the [NCBI taxonomy FTP server](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/).\n\nFor more information see the [nf-core/createtaxdb FAQ](https://nf-co.re/createtaxdb/docs/usage/usage/faq).",
                    "fa_icon": "fas fa-address-book",
                    "format": "file-path"
                },
                "prot2taxid": {
                    "type": "string",
                    "format": "path",
                    "exists": true,
                    "fa_icon": "fas fa-address-card",
                    "help_text": "A two column file tab-separated file with `accession.version` and `taxid`. The first refers to an accession ID in each FASTA entry header. The second refers to the taxonomy ID of the organism the sequence belongs to, as listed in `nodes.dmp`.\n\nIf building with typical NCBI data, the most typical file is the `prot.accession2taxid.gz` file from the [NCBI taxonomy FTP server](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/).\n\nFor more information see the [nf-core/createtaxdb FAQ](https://nf-co.re/createtaxdb/docs/usage/usage/faq).",
                    "description": "Two column protein sequence accession ID to taxonomy map file."
                },
                "nucl2taxid": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "fa_icon": "far fa-address-card",
                    "description": "Two column nucleotide sequence accession ID to taxonomy map file.",
                    "help_text": "A two column file tab-separated file with `accession.version` and `taxid`. The first refers to an accession ID used at the beginning of each FASTA entry header. The second refers to the taxonomy ID of the organism the sequence belongs to, as listed in `nodes.dmp`. Required for Centrifuge, and optional for Kraken2."
                },
                "nodesdmp": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "fa_icon": "fas fa-circle",
                    "description": "Path to NCBI-style taxonomy node dmp file.",
                    "help_text": "A tab/pipe/tab separated table file. See nodes.dmp section of [NCBI taxdump README](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/taxdump_readme.txt) for column file structure.\n\nFor more information see the [nf-core/createtaxdb FAQ](https://nf-co.re/createtaxdb/docs/usage/usage/faq)."
                },
                "namesdmp": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "fa_icon": "fas fa-tag",
                    "description": "Path to NCBI-style taxonomy names dmp file.",
                    "help_text": "A tab/pipe/tab separated table file. See names.dmp section of [NCBI taxdump README](https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/new_taxdump/taxdump_readme.txt) for column file structure.\n\nFor more information see the [nf-core/createtaxdb FAQ](https://nf-co.re/createtaxdb/docs/usage/usage/faq)."
                },
                "malt_mapdb": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to MEGAN6/MALT mapping db file",
                    "help_text": "A mapping DB file containing taxonomy information for building MALT databases. This file can be downloaded from the [MEGAN6 website](https://software-ab.cs.uni-tuebingen.de/download/megan6/welcome.html). Can be zipped (the pipeline will unzip this for you if necessary). Typically the `megan-nucl-Feb2022.db.zip` is used with MALT.\n\nFor more information see the [nf-core/createtaxdb FAQ](https://nf-co.re/createtaxdb/docs/usage/usage/faq).",
                    "fa_icon": "fas fa-database"
                },
                "malt_mapdb_format": {
                    "type": "string",
                    "fa_icon": "fas fa-cog",
                    "description": "Specify the type of MALT mapdb provided, based on the corresponding MALT flag.",
                    "enum": [
                        "mdb",
                        "a2t",
                        "s2t",
                        "a2ec",
                        "s2ec",
                        "t4ec",
                        "a2eggnog",
                        "s2eggnog",
                        "t4eggnog",
                        "a2gtdb",
                        "s2gtdb",
                        "t4gtdb",
                        "a2interpro2go",
                        "s2interpro2go",
                        "t4interprotogo",
                        "a2kegg",
                        "s2kegg",
                        "t4kegg",
                        "a2pgpt",
                        "s2pgpt",
                        "t4pgpt",
                        "a2seed",
                        "s2seed",
                        "t4seed"
                    ],
                    "help_text": "While MALT now theoretically supports only a single type of MEGAN mapping file (`*.db`), in some cases this does not appear to work.\n\nYou can however still currently use [technically 'deprecated' MEGAN mapping files](https://software-ab.cs.uni-tuebingen.de/download/megan6/old.html) that end in `.abin`.\n\nFor nf-core/createtaxdb, when specifying the MALT mapping file you therefore also need to specify which format this file is, based on the corresponding (short) MALT flags for malt-build. For example for the new type of mapping file, you can give just `mdb`. For a nucleotide accession to taxonomy file you give `a2t`. For a accession to SEED category mapping file, you specify `a2seed`. "
                },
                "save_concatenated_fastas": {
                    "type": "boolean",
                    "description": "Save concatenated input FASTAs",
                    "help_text": "Some tools require a single input FASTA of all reference genomes. The pipeline will do this concatenation for you, and by supplying this flag you can save the resulting single fasta for you in the results directory under `cat/`. ",
                    "fa_icon": "fas fa-save"
                }
            }
        },
        "database_building_options": {
            "title": "Database Building Options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "build_bracken": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Turn on extending of Kraken2 database to include Bracken files. Requires nucleotide FASTA File input.",
                    "help_text": "Bracken2 databases are simply just a Kraken2 database with two additional files.\n\nNote however this requires a Kraken2 database _with_ intermediate files still in it, thus can result in large database directories."
                },
                "bracken_build_options": {
                    "type": "string",
                    "description": "Specify parameters being given to bracken build. Must be wrapped in single and double quotes: --bracken_build_options \"'--your_param'\"",
                    "help_text": "See [Bracken documentation](https://github.com/jenniferlu717/Bracken?tab=readme-ov-file#step-1-generate-the-bracken-database-file-databasexmerskmer_distrib).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "build_centrifuge": {
                    "type": "boolean",
                    "description": "Turn on building of Centrifuge database. Requires nucleotide FASTA file input.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "centrifuge_build_options": {
                    "type": "string",
                    "description": "Specify parameters being given to centrifuge-build. Must be wrapped in single and double quotes: --centrifuge_build_options \"'--your_param'\"",
                    "help_text": "See [Centrifuge documentation](https://github.com/DaehwanKimLab/centrifuge/blob/master/MANUAL.markdown#database-download-and-index-building).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "build_diamond": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on building of DIAMOND database. Requires amino-acid FASTA file input."
                },
                "diamond_build_options": {
                    "type": "string",
                    "description": "Specify parameters being given to diamond makedb. Must be wrapped in single and double quotes: --diamond_build_options \"'--your_param'\"",
                    "help_text": "See [diamond documentation](https://github.com/bbuchfink/diamond/wiki/3.-Command-line-options#makedb-options).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "build_ganon": {
                    "type": "boolean",
                    "description": "Turn on building of ganon database. Requires nucleotide FASTA file input.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "ganon_build_options": {
                    "type": "string",
                    "description": "Specify parameters being given to ganon buildcustom. Must be wrapped in single and double quotes: --ganon_build_options \"'--your_param'\"",
                    "help_text": "See [ganon documentation](https://pirovc.github.io/ganon/custom_databases/).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "build_kaiju": {
                    "type": "boolean",
                    "description": "Turn on building of Kaiju database. Requires amino-acid FASTA file input.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "kaiju_build_options": {
                    "type": "string",
                    "description": "Specify parameters being given to kaiju-mkbwt. Must be wrapped in single and double quotes: --kaiju_build_options \"'--your_param'\"",
                    "help_text": "See [Kaiju documentation](https://github.com/bioinformatics-centre/kaiju/tree/master#custom-database).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "kaiju_keepintermediate": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save intermediate files otherwise not required for downstream classification."
                },
                "build_kraken2": {
                    "type": "boolean",
                    "description": "Turn on building of Kraken2 database. Requires nucleotide FASTA file input.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "kraken2_build_options": {
                    "type": "string",
                    "description": "Specify parameters being given to kraken2 build. Must be wrapped in single and double quotes: --kraken2_build_options \"'--your_param'\"",
                    "help_text": "See [Kraken2 documentation](https://github.com/DerrickWood/kraken2/blob/master/docs/MANUAL.markdown#custom-databases).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "kraken2_keepintermediate": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Retain intermediate Kraken2 build files for inspection."
                },
                "build_krakenuniq": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on building of KrakenUniq database. Requires nucleotide FASTA file input."
                },
                "krakenuniq_build_options": {
                    "type": "string",
                    "description": "Specify parameters being given to krakenuniq build. Must be wrapped in single and double quotes: --krakenuniq_build_options \"'--your_param'\"",
                    "help_text": "See [KrakenUniq documentation](https://github.com/fbreitwieser/krakenuniq?tab=readme-ov-file#database-building).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "krakenuniq_keepintermediate": {
                    "type": "boolean",
                    "fa_icon": "fas fa-save",
                    "description": "Save intermediate files otherwise not required for downstream classification."
                },
                "build_malt": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on building of MALT database. Requires nucleotide FASTA file input."
                },
                "malt_build_options": {
                    "type": "string",
                    "description": "Specify parameters given to malt-build. Must include --sequenceType DNA or Protein and be wrapped in double and single quotes: --malt_build_options \"'--sequenceType DNA --your_param'\"",
                    "help_text": "At least the type of reference sequences should be specified. (For RNA sequences, use the DNA setting) - from [MALT manual](https://software-ab.cs.uni-tuebingen.de/download/malt/).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "default": "--sequenceType DNA",
                    "fa_icon": "fas fa-users-cog"
                },
                "build_kmcp": {
                    "type": "boolean",
                    "fa_icon": "fas fa-toggle-on",
                    "description": "Turn on building of KMCP database. Requires nucleotide FASTA file input."
                },
                "kmcp_compute_options": {
                    "type": "string",
                    "description": "Specify parameters being given to kmcp compute. Must be wrapped in single and double quotes: --kmcp_compute_options \"'--your_param'\"",
                    "help_text": "See [KMCP documentation](https://bioinf.shenwei.me/kmcp/usage/#compute).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "kmcp_index_options": {
                    "type": "string",
                    "description": "Specify parameters being given to kmcp index. Must be wrapped in single and double quotes: --kmcp_index_options \"'--your_param'\"",
                    "help_text": "See [KMCP documentation](https://bioinf.shenwei.me/kmcp/usage/#index).\n\nParameters must be wrapped in _both_ single and then double quotes outside these, to ensure the parameters are interpreted as a string for internal use rather than interpreted by the terminal as a pipeline-level parameter.",
                    "fa_icon": "fas fa-users-cog"
                }
            },
            "fa_icon": "fas fa-database"
        },
        "generate_samplesheet_options": {
            "title": "Downstream pipeline samplesheet generation options",
            "type": "object",
            "fa_icon": "fas fa-align-justify",
            "description": "Options for generating input samplesheets for complementary downstream pipelines.",
            "properties": {
                "generate_tar_archive": {
                    "type": "boolean",
                    "description": "Generate `.tar.gz` archived versions of all databases",
                    "help_text": "Many of the tools create databases that consist of a directory with multiple files.\n\nThis option can be useful when you will be downloading taxonomic profiling tools that require remote downloading of files for staging (assuming the tool or pipeline supports decompression of `.tar.gz` files).\n\nA common use case is running taxonomic profilers in the cloud, and where staging tools do not support downloading of directories.\nAnother is if you have to long-term archive your database for reproducibility purposes.\n\nBy giving this flag, `.tar.gz` files of all the databases will be created in the output directory.",
                    "fa_icon": "fas fa-file-archive"
                },
                "generate_downstream_samplesheets": {
                    "type": "boolean",
                    "description": "Turn on generation of samplesheets for downstream pipelines.",
                    "fa_icon": "fas fa-toggle-on"
                },
                "generate_pipeline_samplesheets": {
                    "type": "string",
                    "description": "Specify a comma separated string in quotes to specify which pipeline to generate a samplesheet for.",
                    "fa_icon": "fas fa-toolbox",
                    "pattern": "^(taxprofiler)(?:,(taxprofiler)){0,1}"
                },
                "generate_samplesheet_dbtype": {
                    "type": "string",
                    "default": "raw",
                    "fa_icon": "fas fa-file-code",
                    "description": "Specify which type of database to list paths of in the generated pipeline samplesheet.",
                    "enum": ["raw", "tar"],
                    "help_text": "It is recommend to select `tar` if you plan to run the downstream pipeline in the cloud, or similar environments where you cannot easily download directories."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "unzip_batch_size": {
                    "type": "integer",
                    "fa_icon": "fas fa-file-archive",
                    "description": "How many files to unzip in parallel in a single job.",
                    "help_text": "To reduce the load on scheduling systems, nf-core/createtaxdb batches all compressed input FASTA files into this number, and will decompress them in parallel within a single scheduling job (rather than one job per decompression).\n\nThis is because decompression jobs are often very short and require few resources.",
                    "default": 10000
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            },
            "required": ["unzip_batch_size"]
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/database_building_options"
        },
        {
            "$ref": "#/$defs/generate_samplesheet_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
