nextflow_process {

    name "Test Process SEQKIT_BATCH_RENAME"
    script "../main.nf"
    process "SEQKIT_BATCH_RENAME"

    tag "modules"
    tag "modules_nfcore"
    tag "seqkit"
    tag "seqkit/batch_rename"

    test("sarscov2 - fasta - replace") {

        when {
            process {
                """
                    input[0] = [
                        [ id:'test' ],   // meta map
                        [ file('https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/sarscov2/genome/proteome.fasta.gz'), file('https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz') ],
                    ]
                    input[1] = Channel.of('proteome.fasta.gz\t^.*\$\t1234\tproteome.fasta', 'genome.fna.gz\t^.*\$\t1234\tgenome.fna').toList()

                """
            }
        }
//

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("sarscov2 - fasta - stub") {

        options "-stub"

        when {
            process {
                """
                    input[0] = [
                        [ id:'test' ],   // meta map
                        [ file('https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/sarscov2/genome/proteome.fasta.gz'), file('https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/prokaryotes/bacteroides_fragilis/genome/genome.fna.gz') ],
                    ]
                    input[1] = Channel.of('proteome.fasta.gz\t^.*\$\t1234\tproteome.fasta', 'genome.fna.gz\t^.*\$\t1234\tgenome.fna').toList()

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
}
