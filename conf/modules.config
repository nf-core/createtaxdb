/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]

    withName: UNZIP {
        ext.prefix = { "${archive.getSimpleName()}" }
    }

    withName: MULTIQC {
        ext.args   = { params.multiqc_title ? "--title \"${params.multiqc_title}\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: FIND_CONCATENATE_DNA {
        ext.prefix = { "${meta.id}.fna" }
        publishDir = [
            path: { "${params.outdir}/cat" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_concatenated_fastas,
        ]
    }

    withName: FIND_CONCATENATE_AA {
        ext.prefix = { "${meta.id}.faa" }
        publishDir = [
            path: { "${params.outdir}/cat" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: params.save_concatenated_fastas,
        ]
    }

    withName: BRACKEN_BUILD {
        ext.prefix = { "${meta.id}-bracken" }
        ext.args   = { "${params.bracken_build_options}" }
    }

    withName: CENTRIFUGE_BUILD {
        ext.prefix = { "${meta.id}-centrifuge" }
        ext.args   = { "${params.centrifuge_build_options}" }
    }

    withName: DIAMOND_MAKEDB {
        ext.prefix = { "${meta.id}-diamond" }
        ext.args   = { "${params.diamond_build_options}" }
    }

    withName: GANON_BUILD {
        ext.prefix = { "${meta.id}-ganon" }
        ext.args   = { "${params.ganon_build_options}" }
    }

    withName: KAIJU_MKFMI {
        ext.prefix = { "${meta.id}-kaiju" }
        ext.args   = { "${params.kaiju_build_options}" }
    }

    withName: KRAKEN2_ADD {
        ext.prefix = { "${meta.id}-kraken2" }
    }

    withName: KRAKEN2_BUILD {
        ext.prefix = { "${meta.id}-kraken2" }
        ext.args   = { "${params.kraken2_build_options}" }
    }

    withName: KRAKENUNIQ_BUILD {
        ext.prefix = { "${meta.id}-krakenuniq" }
        ext.args   = { "${params.krakenuniq_build_options}" }
    }

    withName: MALT_BUILD {
        ext.prefix = { "${meta.id}-malt" }
        ext.args   = { "${params.malt_build_options}" }
    }

    withName: KMCP_COMPUTE {
        ext.prefix = { "${meta.id}-kmcp-compute" }
        ext.args   = { "${params.kmcp_compute_options}" }
        publishDir = [
            enabled: false
        ]
    }

    withName: KMCP_INDEX {
        ext.prefix = { "${meta.id}-kmcp-index" }
        ext.args   = { "${params.kmcp_index_options}" }
    }

    withName: TAR {
        ext.args   = "-h"
        ext.prefix = { "${meta.id}-${meta.tool}" }
        publishDir = [
            path: { "${params.outdir}/${meta.tool}/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
}
