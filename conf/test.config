/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run nf-core/createtaxdb -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

process {
    resourceLimits = [
        cpus: 4,
        memory: '15.GB',
        time: '1.h',
    ]
}

params {
    config_profile_name              = 'Test profile'
    config_profile_description       = 'Minimal test dataset to check pipeline function'

    // Input data
    // TODO nf-core: Specify the paths to your test data on nf-core/test-datasets
    // TODO nf-core: Give any required params for the test so that command line flags are not needed
    input                            = params.pipelines_testdata_base_path + 'createtaxdb/samplesheets/test.csv'

    dbname                           = "database"

    build_bracken                    = true
    build_diamond                    = true
    build_ganon                      = true
    build_kaiju                      = true
    build_malt                       = true
    build_centrifuge                 = true
    build_kraken2                    = true
    build_krakenuniq                 = true
    build_kmcp                       = true

    unzip_batch_size                 = 1

    krakenuniq_build_options         = "--work-on-disk --max-db-size 14 --kmer-len 15 --minimizer-len 13 --jellyfish-bin \"\$(which jellyfish)\""

    accession2taxid                  = params.pipelines_testdata_base_path + 'createtaxdb/data/taxonomy/nucl_gb.accession2taxid'
    nucl2taxid                       = params.pipelines_testdata_base_path + 'createtaxdb/data/taxonomy/nucl2tax.map'
    prot2taxid                       = params.pipelines_testdata_base_path + 'createtaxdb/data/taxonomy/prot.accession2taxid.gz'
    nodesdmp                         = params.pipelines_testdata_base_path + 'createtaxdb/data/taxonomy/nodes.dmp'
    namesdmp                         = params.pipelines_testdata_base_path + 'createtaxdb/data/taxonomy/names.dmp'
    malt_mapdb                       = 's3://ngi-igenomes/test-data/createtaxdb/taxonomy/nucl_acc2tax-Jul2019.abin.zip'
    malt_mapdb_format                = 'a2t'

    // General output options
    generate_tar_archive             = true

    generate_downstream_samplesheets = true
    generate_pipeline_samplesheets   = 'taxprofiler'
    generate_samplesheet_dbtype      = 'tar'
}

process {
    withName: KRAKENUNIQ_BUILD {
        memory = { 12.GB * task.attempt }
    }
}
